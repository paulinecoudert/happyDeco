@model HappyDeco.Models.ProjetModel
@{
    ViewBag.Title = "Projet";
}



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Add a Projet</title>
</head>
<body>
    <h1>Add a Flop</h1>
    <form method="post">
        <fieldset>

            <p>
                <label for="nom">Nom:</label>
                <input type="text" name="Nom" placeholder=" " required />
                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
            </p>

            <p>
                <label for="description">Description:</label>
                <input type="text" name="description" placeholder=" " required />
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </p>

            <p>
                <label for="image">Image(s):</label>
                <input type="text" name="description" placeholder=" " required />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </p>

            <p>
                <label for="piece">Piece:</label>
                <input type="text" name="piece" placeholder=" " required />
                @Html.ValidationMessageFor(model => model.Piece, "", new { @class = "text-danger" })
            </p>

            <p>
                <label for="budget">Budget:</label>
                <input type="text" name="budget" placeholder=" " required />
                @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
            </p>

            <p>
                <label for="datedebut">Date de debut:</label>
                <input type="text" name="datedebut" placeholder=" " required />
                @Html.ValidationMessageFor(model => model.DateDeDebut, "", new { @class = "text-danger" })
            </p>

            <p>
                <label for="datefin">Date de fin:</label>
                <input type="text" name="datefin" placeholder=" " required />
                @Html.ValidationMessageFor(model => model.DateDeFin, "", new { @class = "text-danger" })
            </p>

            <p><input type="submit" name="buttonSubmit" value="SEND" /></p>
        </fieldset>
    </form>
</body>
</html>
